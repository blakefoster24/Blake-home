blueprint:
  name: Gesture — N toggles in timer window → Run Scene (with auto-reset)
  description: >
    Detect N on/off flips of a single entity within the helper timer's window and
    run a scene. Uses your existing helpers:
      • counter.counter_helper
      • timer.timer_helper
    Counter is reset when the timer finishes (and after a match) so stale counts
    never affect the next gesture.
  domain: automation

  input:
    source_entity:
      name: Source entity to watch
      selector:
        entity: {}   # any on/off capable entity

    count_threshold:
      name: Number of toggles required
      default: 3
      selector:
        number:
          min: 2
          max: 20
          step: 1
          mode: box

    scene_target:
      name: Scene to activate
      selector:
        entity:
          domain: scene

# Make inputs usable inside templates (no `!input` inside Jinja)
variables:
  i_threshold: !input count_threshold

mode: restart
max_exceeded: silent

triggers:
  # Count every state change on the watched entity
  - trigger: state
    entity_id: !input source_entity
    id: flip

  # When the helper timer finishes, clear the counter so it can't leak
  - trigger: state
    entity_id: timer.timer_helper
    from: active
    to: idle
    id: timer_done

conditions: []

actions:
  - choose:
      # Timer finished → reset counter only
      - conditions:
          - condition: trigger
            id: timer_done
        sequence:
          - action: counter.reset
            target:
              entity_id: counter.counter_helper

    default:
      # A flip occurred
      # If timer isn't running, start a fresh window and clear any old count
      - choose:
          - conditions:
              - condition: state
                entity_id: timer.timer_helper
                state: idle
            sequence:
              - action: counter.reset
                target:
                  entity_id: counter.counter_helper
              - action: timer.start
                target:
                  entity_id: timer.timer_helper

      # Count this flip
      - action: counter.increment
        target:
          entity_id: counter.counter_helper

      # If threshold met while timer is active → run scene, then clean up
      - choose:
          - conditions:
              - condition: template
                value_template: >
                  {{ states('counter.counter_helper')|int(0) >= i_threshold|int }}
              - condition: state
                entity_id: timer.timer_helper
                state: active
            sequence:
              - action: scene.turn_on
                target:
                  entity_id: !input scene_target
              - action: timer.cancel
                target:
                  entity_id: timer.timer_helper
              - action: counter.reset
                target:
                  entity_id: counter.counter_helper